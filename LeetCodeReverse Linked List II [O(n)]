/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        
        ListNode tmp1 = head;
        ArrayList<Integer> al = new ArrayList<>();
        
        for(int i=1;i<left;++i)
        {
            tmp1 = tmp1.next;
        }
        ListNode tmp2=tmp1;
        
        for(int j=left;j<right;++j)
        {
            al.add(tmp1.val);
            tmp1=tmp1.next;
        }
        al.add(tmp1.val);
        Collections.reverse(al);
        
        int k=0;
        for(int j=left;j<=right;++j)
        {
            tmp2.val=al.get(k);
            ++k;
            tmp2=tmp2.next;
        }
        
        // System.out.println(al);
        return(head);
    }
}
