/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int lh=0, rh=0;
    public int height(TreeNode root)
    {
        if(root==null)return 0;
        return(1+Math.max(height(root.left),height(root.right)));
    }
    public boolean isBalanced(TreeNode root) {
        if(root == null)return true;
        if(isBalanced(root.left)==false)return(false);
        if(isBalanced(root.right)==false)return(false);
        
        
        lh = height(root.left);
        rh = height(root.right);
        if(Math.abs(lh-rh)>1)return(false);
        else return true;
        
    }
}
