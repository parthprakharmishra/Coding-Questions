/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        
        
        
        List<List<Integer>> l = new ArrayList<>();
        if(root==null)return(l);
        
        while(!q.isEmpty()){
            List<Integer> l1 = new ArrayList<>();
            int len = q.size();
            
            
            for(int i=0;i<len;++i){
                TreeNode curr = q.poll();
                if(curr!=null)l1.add(curr.val);
                if(curr.left!=null)q.add(curr.left);
                if(curr.right!=null)q.add(curr.right);
            }
            l.add(l1);
        }
        
        return(l);
        
    }
}
