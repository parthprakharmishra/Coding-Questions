/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static Queue<TreeNode> q = new LinkedList<>();
    public int maxLevelSum(TreeNode root) 
    {
        q.add(root);
        q.add(null);
        int s=0, max=Integer.MIN_VALUE, lev=0, l=1;
        while(!q.isEmpty())
        {
            TreeNode tmp = q.poll();
            if(tmp!=null)
            {
                s=s+tmp.val;
                if(tmp.left!=null)q.add(tmp.left);
                if(tmp.right!=null)q.add(tmp.right);
            }
            else if(!q.isEmpty())
            {
                q.add(null);
                if(s>max)
                {
                    max=s;
                    lev=l;
                }
                ++l;
                s=0;
            }
        }
        if(s>max)lev=l;
        return(lev);
    }
}
