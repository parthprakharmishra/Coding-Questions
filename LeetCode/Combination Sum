class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) 
    {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> l1 = new ArrayList<>();
        
        soln(candidates, 0, l1, target, res);
        return(res);
    }
    
    public void soln(int[] nums, int index, List<Integer> l1, int target, List<List<Integer>> res)
    {
        if(target==0)
        {
            res.add(new ArrayList<Integer>(l1));
            return;
        }
        if(nums.length==index)return;
        
        if(nums[index]<=target)
        {
            l1.add(nums[index]);
            soln(nums, index, l1, target - nums[index], res);
            l1.remove(l1.size() - 1);
        }
        soln(nums, index + 1, l1, target, res);
    }
}
