/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    TreeNode inorder(TreeNode curr)
    {
        while(curr!=null && curr.left!=null)
        {
            curr=curr.left;
        }
        return(curr);
    }
    
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null)return(null);
        if(key<root.val)root.left = deleteNode(root.left, key);
        else if(key>root.val)root.right = deleteNode(root.right, key);
        else
        {
            if(root.left==null)return(root.right);
            else if(root.right==null)return(root.left);
            
            TreeNode tmp = inorder(root.right);
            root.val = tmp.val;
            root.right = deleteNode(root.right, tmp.val);
        }
        return(root);
    }
}
