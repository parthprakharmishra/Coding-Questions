/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode node1, node2, prev;
    
    public void calNode(TreeNode root)
    {
        if(root==null)return;
        calNode(root.left);
        
        if(prev!=null && root.val<prev.val)
        {
            if(node1==null)node1 = prev;
            node2 = root;
        }
        
        prev = root;
        calNode(root.right);
    }
    
    public void recoverTree(TreeNode root) {
        calNode(root);
        int tmp = node1.val;
        node1.val=node2.val;
        node2.val=tmp;
    }
}
