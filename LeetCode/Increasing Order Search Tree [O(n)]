/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> al = new ArrayList<>();
    
    public TreeNode increasingBST(TreeNode root) 
    {
        inorder(root,al);
        return(tree(al));
    }
    
    TreeNode tree(ArrayList<Integer> al)
    {
        if(al.size()==0)return(null);
        TreeNode root=new TreeNode(al.remove(0));
        root.right=tree(al);
        return(root);
    }
    
    void inorder(TreeNode t, ArrayList<Integer> al)
    {
        if(t==null)return;
        inorder(t.left, al);
        al.add(t.val);
        inorder(t.right, al);
    }
}
